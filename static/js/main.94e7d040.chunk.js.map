{"version":3,"sources":["serviceWorker.ts","components/Header/Profile/Profile-view.tsx","utils/config.ts","components/Header/Header-view.tsx","utils/types.ts","components/Loader/Loader-view.tsx","components/FetchLoader/FetchLoader-view.tsx","components/OrderModal/OrderModal-view.tsx","components/OrderModal/OrderModal-container.tsx","components/AddModal/AddModal-view.tsx","components/AddModal/AddModal-container.tsx","components/EditModal/EditModal-view.tsx","components/EditModal/EditModal-container.tsx","components/DeleteModal/DeleteModal-view.tsx","components/DeleteModal/DeleteModal-container.tsx","components/RestockModal/RestockModal-view.tsx","components/RestockModal/RestockModal-container.tsx","components/ItemList/ItemCard/ItemCard-view.tsx","components/InventoryModal/InventoryModal-view.tsx","components/InventoryModal/InventoryModal-container.tsx","components/ItemList/ItemList-view.tsx","components/ItemList/ItemList-container.tsx","components/SaleList/ConfirmSaleButton/ConfirmSaleButton-view.tsx","components/SaleList/ConfirmSaleButton/ConfirmSaleButton-container.tsx","components/SaleList/UnconfirmedSaleCard/UnconfirmedSaleCard-view.tsx","components/SaleList/ConfirmedSaleCard/ConfirmedSaleCard-view.tsx","components/SaleList/SaleList-view.tsx","components/SaleList/SaleList-container.tsx","components/Dashboard/Dashboard-view.tsx","components/Dashboard/Dashboard-container.tsx","components/Signin/Signin-view.tsx","components/Signin/Signin-container.tsx","components/ProcessingLoader/ProcessingLoader-view.tsx","components/Register/Register-view.tsx","components/Register/Register-container.tsx","components/AppLoader/AppLoader-view.tsx","components/Disconnected/Disconnected-view.tsx","components/NotFound/NotFound-view.tsx","containers/App.tsx","containers/Root.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Profile","_this$props","this","props","name","handleSignout","react","NavItem","className","NavLink_default","a","as","Button","variant","onClick","react_fontawesome_index_es","icon","React","Config","Object","classCallCheck","market","restServer","accountServer","id","color","url","wsURL","authURL","config","Header","username","Navbar","fixed","bg","Container","lib","to","Brand","size","disabled","style","opacity","concat","Nav","Profile_view_Profile","Model","type","createClass","key","value","getNamespaced","getNamespacedType","getFullyQualifiedIdentifier","model","NS","locator","_locator$split","split","_locator$split2","slicedToArray","$class","namespace","length","Participant","_Model","role","_this","possibleConstructorReturn","getPrototypeOf","call","inherits","Promise","_ref","asyncToGenerator","regenerator_default","mark","_callee","resolve","reject","_ref2","data","participant","response","_Model$split","_Model$split2","wrap","_context","prev","next","Axios","get","withCredentials","sent","undefined","loggedIn","user","t0","status","stop","_x","_x2","apply","arguments","userID","crypto","createHash","update","digest","_ref3","_callee2","accountExists","shouldIssueIdentity","_response","_response$data$filter","_response$data$filter2","adminIdentity","_response$data$filter3","_response$data$filter4","identity","_Axios$post","identityIssueData","_ref4","cardData","cardFile","walletData","_context2","some","filter","getResourceLocator","issuer","post","defineProperty","toLowerCase","Error","options","responseType","File","lastModified","Date","now","FormData","append","headers","content-type","_x3","_x4","Seller","_Participant","TYPE","_ref5","_callee3","_context3","cache","_x5","_x6","Buyer","_Participant2","DeltaType","Item","_Model2","description","seller","_this2","amount","itemID","uuid","_ref6","_callee4","_context4","transactionId","timestamp","toISOString","_x7","_x8","item","newDescription","_ref7","_callee5","_Model$split3","_Model$split4","_context5","requestData","_x9","_x10","_ref8","_callee7","_ref9","items","_context7","all","map","_ref10","_callee6","itemData","_context6","mapToItem","abrupt","_x13","_x11","_x12","_ref11","_callee8","_ref12","_Model$split5","_Model$split6","sellerID","_context8","_x14","_x15","Inventory","_Model3","changes","_this3","_ref13","_callee9","invData","_Model$split7","_Model$split8","_context9","params","delta","invID","_x16","_x17","Sale","_Model4","buyer","_this4","confirmed","sale","_ref14","_callee10","_Model$split9","_Model$split10","_Model$split11","_Model$split12","buyerID","_item","_context10","saleID","console","log","t1","_x18","_x19","_this5","_ref15","_callee12","_ref16","sales","_context12","_ref17","_callee11","_context11","mapToSale","_x22","_x20","_x21","RequestError","err","message","error","indexOf","slice","lastIndexOf","_","Loader","assign","FetchLoader","Loader_view_Loader","OrderModal","close","onHide","shown","processing","_this$props2","handleIncrementAmount","handleDecrementAmount","handleChangeAmount","handleSubmit","Modal","show","backdrop","closeButton","Title","Body","Form","Group","Row","Col","sm","Label","InputGroup","Prepend","FormControl","toString","onChange","Append","Footer","state","handleSuccess","handleError","setState","requestCreate","then","toaster","notify","position","duration","catch","parseError","finally","evt","Number","parseInt","target","Math","max","_this$state","_this$props3","OrderModal_view_OrderModal","bind","AddModal","handleChangeName","handleChangeDescription","Control","placeholder","assertThisInitialized","AddModal_view_AddModal","EditModal","requestEdit","EditModal_view_EditModal","DeleteModal","requestDelete","DeleteModal_view_DeleteModal","RestockModal","requestRestock","RestockModal_view_RestockModal","ItemCard","orderItem","editItem","deleteItem","restockItem","checkInventory","Card","Text","InventoryModal","inventory","FetchLoader_view_FetchLoader","Table","del","index","requestInventory","requestOfItem","inv","InventoryModal_view_InventoryModal","Items","addModalOpen","orderModalOpen","editModalOpen","deleteModalOpen","restockModalOpen","inventoryModalOpen","itemForOrder","itemForEdit","itemForDelete","itemForRestock","itemForInventory","openAddModal","openOrderModal","openEditModal","openDeleteModal","openRestockModal","openInventoryModal","closeModal","loaded","refresh","CardColumns","ItemCard_view_ItemCard","RestockModal_container_RestockModal","AddModal_container_AddModal","EditModal_container_EditModal","DeleteModal_container_DeleteModal","InventoryModal_container_InventoryModal","OrderModal_container_OrderModal","wss","WebSocket","ItemList","requestItems","onmessage","JSON","parse","requestFetchAll","ItemList_view_Items","ConfirmSaleButton","confirmSale","requestConfirm","ConfirmSaleButton_view_ConfirmSaleButton","UnconfirmedSaleCard","border","ConfirmSaleButton_container_ConfirmSaleButton","ConfirmedSaleCard","SaleList","UnconfirmedSaleCard_view_UnconfirmedSaleCard","ConfirmedSaleCard_view_ConfirmedSaleCard","requestSales","SaleList_view_SaleList","Dashboard","Header_view_Header","marginTop","ItemList_container_ItemList","SaleList_container_SaleList","session","Dashboard_view_Dashboard","react_router","Signin","height","href","Signin_view_Signin","ProcessingLoader","Register","handleChangeRole","maxWidth","controlId","ToggleButtonGroup","ToggleButton","cursor","ProcessingLoader_view_ProcessingLoader","event","currentTarget","handleRegister","history","push","_this$state2","Register_view_Register","withRouter","AppLoader","Disconnected","aria-label","NotFound","react_router_dom","App","disconnected","handleSignin","requestSession","successCallback","errorCallback","requestRegister","requestSignout","reload","Disconnected_view_Disconnected","path","exact","render","Signin_container_Signin","Register_container","Dashboard_container_Dashboard","NotFound_view_NotFound","AppLoader_view_AppLoader","Root","basename","process","App_App","library","add","fas","far","fab","ReactDOM","react_default","createElement","Root_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94e7d040.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NavItem, Button } from 'react-bootstrap';\r\nimport NavLink from 'react-bootstrap/NavLink';\r\n\r\ninterface Props {\r\n  name: string;\r\n  handleSignout: () => void;\r\n}\r\n\r\nexport default class Profile extends React.Component<Props> {\r\n  render() {\r\n    const { name, handleSignout } = this.props;\r\n    return (\r\n      <>\r\n        <NavItem className=\"text-light\">\r\n          <NavLink as=\"span\">{name}</NavLink>\r\n        </NavItem>\r\n        <Button className=\"text-light\" variant=\"link\" onClick={handleSignout}>\r\n          <FontAwesomeIcon icon=\"sign-out-alt\" />\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","export default class Config {\r\n  market: {\r\n    id: number;\r\n    color: string;\r\n    name: string;\r\n  };\r\n  restServer: { url: string; wsURL: string, authURL: string };\r\n  accountServer: { url: string };\r\n\r\n  constructor() {\r\n    this.market = {\r\n      id: 3,\r\n      color: 'primary',\r\n      name: 'Trimarket'\r\n    };\r\n    this.restServer = {\r\n      url: 'https://api-market3-stockchainz.serveo.net/api',\r\n      wsURL: 'wss://api-market3-stockchainz.serveo.net',\r\n      authURL: 'https://api-market3-stockchainz.serveo.net/auth'\r\n    };\r\n\r\n    this.accountServer = {\r\n      url: 'https://account-market3-stockchainz.serveo.net/api'\r\n    };\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Nav, Container, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Profile from './Profile';\r\nimport Config from 'utils/config';\r\n\r\nconst config = new Config();\r\n\r\ninterface Props {\r\n  username: string;\r\n  handleSignout: () => void;\r\n}\r\n\r\nexport default class Header extends React.Component<Props> {\r\n  render() {\r\n    const { username } = this.props;\r\n    const { handleSignout } = this.props;\r\n    return (\r\n      <Navbar fixed=\"top\" variant=\"dark\" bg=\"dark\" className=\"shadow\">\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand className=\"col-sm-3 col-md-2 mr-0 d-flex align-items-center\">\r\n              <Button\r\n                size=\"sm\"\r\n                disabled\r\n                variant=\"light\"\r\n                className=\"p-0 mr-2\"\r\n                style={{ opacity: 1 }}\r\n              >\r\n                <FontAwesomeIcon icon=\"store\" className={`text-${config.market.color}`} />\r\n              </Button>\r\n              <span>{config.market.name}</span>\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n          <Nav className=\"ml-auto\">\r\n            <Profile name={username} handleSignout={handleSignout} />\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import Config from './config';\r\nimport Axios, { AxiosError } from 'axios';\r\nimport uuid from 'uuidv4';\r\nimport crypto from 'crypto';\r\nimport * as _ from 'underscore.string';\r\n\r\nconst config: Config = new Config();\r\n\r\nexport interface Session {\r\n  loggedIn: boolean;\r\n  user?: Participant;\r\n}\r\n\r\nexport abstract class Model {\r\n  type: string;\r\n  id: string;\r\n  static NS = 'com.stockchainz.net';\r\n\r\n  constructor(type: string, id: string) {\r\n    this.type = type;\r\n    this.id = id;\r\n  }\r\n\r\n  static getNamespaced(model: string) {\r\n    return `${Model.NS}.${model}`;\r\n  }\r\n\r\n  getNamespacedType(): string {\r\n    return Model.getNamespaced(this.type);\r\n  }\r\n\r\n  getFullyQualifiedIdentifier(): string {\r\n    return `${this.getNamespacedType()}#${this.id}`;\r\n  }\r\n\r\n  getResourceLocator(): string {\r\n    return `resource:${this.getFullyQualifiedIdentifier()}`;\r\n  }\r\n\r\n  static split(locator: string): [string, string] {\r\n    const [$class, id] = locator.split('#');\r\n    const namespace = $class.split('.');\r\n    return [namespace[namespace.length - 1], id];\r\n  }\r\n}\r\n\r\nexport class Participant extends Model {\r\n  name: string;\r\n\r\n  constructor(role: string, id: string, name: string) {\r\n    super(role, id);\r\n    this.name = name;\r\n  }\r\n\r\n  static requestSession(): Promise<Session> {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { data } = await Axios.get(`${config.restServer.url}/wallet`, {\r\n          withCredentials: true\r\n        });\r\n        let participant = undefined;\r\n        if (data.length > 0) {\r\n          // Check bound participant\r\n          let response = await Axios.get(`${config.restServer.url}/system/ping`, {\r\n            withCredentials: true\r\n          });\r\n          const [role, id] = Model.split(response.data.participant);\r\n\r\n          // Get details for bound participant\r\n          response = await Axios.get(`${config.restServer.url}/${role}/${id}`, {\r\n            withCredentials: true\r\n          });\r\n          participant = new Participant(role, id, response.data.name);\r\n        }\r\n        resolve({ loggedIn: true, user: participant });\r\n      } catch (err) {\r\n        if (err.response && err.response.status === 401) {\r\n          resolve({ loggedIn: false });\r\n        } else {\r\n          reject(err);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  static requestRegister(name: string, role: string): Promise<Participant> {\r\n    const userID = crypto\r\n      .createHash('sha1')\r\n      .update(name)\r\n      .update(role)\r\n      .digest('hex');\r\n\r\n    const participant = new Participant(role, userID, name);\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        // 1. Check if participant exists\r\n        const response = await Axios.get(`${config.accountServer.url}/${role}`);\r\n        const accountExists = response.data.some(\r\n          (participant: { name: string }) => participant.name === name\r\n        );\r\n\r\n        let shouldIssueIdentity = true;\r\n\r\n        if (accountExists) {\r\n          // If participant exists, check if identity is already issued\r\n          const response = await Axios.get(`${config.accountServer.url}/system/identities`);\r\n          const [adminIdentity] = response.data.filter(\r\n            (identity: { participant: string }) =>\r\n              identity.participant ===\r\n              `resource:org.hyperledger.composer.system.NetworkAdmin#admin${config.market.id}`\r\n          );\r\n          const [identity] = response.data.filter(\r\n            (identity: { issuer: string; participant: string }) => {\r\n              return (\r\n                identity.participant === participant.getResourceLocator() &&\r\n                identity.issuer === adminIdentity.issuer\r\n              );\r\n            }\r\n          );\r\n          // Identity should only be issued if the identity does not exist\r\n          // for this connection\r\n          shouldIssueIdentity = !identity;\r\n        } else {\r\n          // Otherwise, create participant\r\n          await Axios.post(`${config.accountServer.url}/${participant.type}`, {\r\n            $class: participant.getNamespacedType(),\r\n            [role.toLowerCase() + 'ID']: userID,\r\n            name: name\r\n          });\r\n        }\r\n\r\n        if (!shouldIssueIdentity) {\r\n          throw new Error('Account already exists!');\r\n        }\r\n\r\n        const identityIssueData = {\r\n          participant: participant.getFullyQualifiedIdentifier(),\r\n          userID: userID,\r\n          options: {}\r\n        };\r\n        const { data: cardData } = await Axios.post(\r\n          `${config.accountServer.url}/system/identities/issue`,\r\n          identityIssueData,\r\n          { responseType: 'blob' }\r\n        );\r\n        const cardFile = new File([cardData], `${userID}.card`, {\r\n          type: 'application/octet-stream',\r\n          lastModified: Date.now()\r\n        });\r\n        const walletData = new FormData();\r\n        walletData.append('card', cardFile);\r\n        await Axios.post(`${config.restServer.url}/wallet/import`, walletData, {\r\n          withCredentials: true,\r\n          headers: { 'content-type': 'multipart/form-data' }\r\n        });\r\n\r\n        resolve(participant);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  static requestSignout() {\r\n    return Axios.get(`${config.restServer.authURL}/logout`, { withCredentials: true });\r\n  }\r\n}\r\n\r\nexport class Seller extends Participant {\r\n  static TYPE = 'Seller';\r\n  static cache: any = {};\r\n\r\n  constructor(id: string, name: string) {\r\n    super(Seller.TYPE, id, name);\r\n  }\r\n\r\n  static requestData(id: string): Promise<Seller> {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        if (!Seller.cache[id]) {\r\n          const response = await Axios.get(config.restServer.url + '/Seller/' + id, {\r\n            withCredentials: true\r\n          });\r\n          Seller.cache[id] = new Seller(id, response.data.name);\r\n        }\r\n        resolve(Seller.cache[id]);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport class Buyer extends Participant {\r\n  static TYPE = 'Buyer';\r\n\r\n  constructor(id: string, name: string) {\r\n    super(Buyer.TYPE, id, name);\r\n  }\r\n}\r\n\r\nexport class Item extends Model {\r\n  static TYPE = 'Item';\r\n\r\n  name: string;\r\n  description: string;\r\n  amount: number;\r\n  seller: Seller | undefined;\r\n  static cache: any = {};\r\n\r\n  constructor(id: string, name: string, description: string, seller?: Seller, amount: number = 0) {\r\n    super(Item.TYPE, id);\r\n    this.name = name;\r\n    this.description = description;\r\n    this.amount = amount;\r\n    this.seller = seller;\r\n  }\r\n\r\n  static requestCreate(name: string, description: string): Promise<Item> {\r\n    const itemID = 'IT_' + uuid();\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        await Axios.post(\r\n          config.restServer.url + '/CreateItem',\r\n          {\r\n            $class: Model.getNamespaced('CreateItem'),\r\n            itemID: 'IT_' + uuid(),\r\n            name: name,\r\n            description: description,\r\n            transactionId: '',\r\n            timestamp: new Date().toISOString()\r\n          },\r\n          { withCredentials: true }\r\n        );\r\n        resolve(new Item(itemID, name, description));\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  static requestEdit(item: Item, newDescription: string) {\r\n    return Axios.post(\r\n      config.restServer.url + '/UpdateItem',\r\n      {\r\n        $class: Model.getNamespaced('UpdateItem'),\r\n        item: item.id,\r\n        newDescription: newDescription,\r\n        transactionId: '',\r\n        timestamp: new Date().toISOString()\r\n      },\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n\r\n  static requestDelete(item: Item) {\r\n    return Axios.post(\r\n      config.restServer.url + '/DeleteItem',\r\n      {\r\n        $class: Model.getNamespaced('DeleteItem'),\r\n        item: item.getResourceLocator(),\r\n        transactionId: '',\r\n        timestamp: new Date().toISOString()\r\n      },\r\n      {\r\n        withCredentials: true\r\n      }\r\n    );\r\n  }\r\n\r\n  static requestRestock(item: Item, amount: number) {\r\n    return Axios.post(\r\n      config.restServer.url + '/RestockItem',\r\n      {\r\n        $class: Model.getNamespaced('RestockItem'),\r\n        item: item.getResourceLocator(),\r\n        amount: amount,\r\n        transactionId: '',\r\n        timestamp: new Date().toISOString()\r\n      },\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n\r\n  static mapToItem(item: {\r\n    seller: string;\r\n    itemID: string;\r\n    name: string;\r\n    description: string;\r\n    amount: number | undefined;\r\n  }): Promise<Item> {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const [, id] = Model.split(item.seller);\r\n        const seller = await Seller.requestData(id);\r\n        resolve(new Item(item.itemID, item.name, item.description, seller, item.amount));\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  static requestFetchAll(): Promise<Array<Item>> {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { data } = await Axios.get(config.restServer.url + '/Item', {\r\n          withCredentials: true\r\n        });\r\n        const items: Array<Item> = await Promise.all(\r\n          data.map(\r\n            async (itemData: {\r\n              seller: string;\r\n              itemID: string;\r\n              name: string;\r\n              description: string;\r\n              amount: number | undefined;\r\n            }) => await Item.mapToItem(itemData)\r\n          )\r\n        );\r\n\r\n        resolve(items);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  static requestData(id: string): Promise<Item> {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        if (!Item.cache[id]) {\r\n          const { data } = await Axios.get(config.restServer.url + '/Item/' + id, {\r\n            withCredentials: true\r\n          });\r\n          const [, sellerID] = Model.split(data.seller);\r\n          const seller = await Seller.requestData(sellerID);\r\n\r\n          Item.cache[id] = new Item(data.itemID, data.name, data.description, seller, data.amount);\r\n        }\r\n        resolve(Item.cache[id]);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport enum DeltaType {\r\n  RESTOCK = 'RESTOCK',\r\n  SALE = 'SALE'\r\n}\r\n\r\nexport interface InventoryDelta extends Model {\r\n  amount: number;\r\n  type: DeltaType;\r\n}\r\n\r\nexport class Inventory extends Model {\r\n  static TYPE = 'Inventory';\r\n  itemID: string;\r\n  changes: InventoryDelta[];\r\n\r\n  constructor(id: string, itemID: string, changes: Array<InventoryDelta>) {\r\n    super(Inventory.TYPE, id);\r\n    this.itemID = itemID;\r\n    this.changes = changes;\r\n  }\r\n\r\n  static requestOfItem(item: Item): Promise<Inventory> {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const response = await Axios.get(config.restServer.url + '/queries/queryInventory', {\r\n          params: {\r\n            item: item.getResourceLocator()\r\n          },\r\n          withCredentials: true\r\n        });\r\n        const invData = response.data[0];\r\n        const changes: Array<InventoryDelta> = invData.changes.map(\r\n          (delta: { amount: number; type: string }) => ({ amount: delta.amount, type: delta.type })\r\n        );\r\n        const [, itemID] = Model.split(invData.item);\r\n        resolve(new Inventory(invData.invID, itemID, changes));\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport class Sale extends Model {\r\n  static TYPE = 'Sale';\r\n\r\n  item: Item;\r\n  amount: number;\r\n  confirmed: boolean;\r\n  buyer?: Buyer;\r\n\r\n  constructor(id: string, item: Item, amount: number, buyer?: Buyer, confirmed: boolean = false) {\r\n    super(Sale.TYPE, id);\r\n\r\n    this.item = item;\r\n    this.amount = amount;\r\n    this.buyer = buyer;\r\n    this.confirmed = confirmed;\r\n  }\r\n\r\n  static requestCreate(item: Item, amount: number) {\r\n    return Axios.post(\r\n      config.restServer.url + '/PlaceOrder',\r\n      {\r\n        $class: Model.getNamespaced('PlaceOrder'),\r\n        item: item.getResourceLocator(),\r\n        amount: amount,\r\n        transactionId: '',\r\n        timestamp: new Date().toISOString()\r\n      },\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n\r\n  static requestConfirm(sale: Sale) {\r\n    return Axios.post(\r\n      config.restServer.url + '/ConfirmSale',\r\n      {\r\n        $class: Model.getNamespaced('ConfirmSale'),\r\n        sale: sale.getResourceLocator(),\r\n        transactionId: '',\r\n        timestamp: new Date().toISOString()\r\n      },\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n\r\n  static mapToSale(sale: {\r\n    item: string;\r\n    buyer: string;\r\n    saleID: string;\r\n    amount: number;\r\n    status: string;\r\n  }): Promise<Sale> {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const [, itemID] = Model.split(sale.item);\r\n        const [, buyerID] = Model.split(sale.buyer);\r\n        const buyer = new Buyer(buyerID, '');\r\n        try {\r\n          const item = await Item.requestData(itemID);\r\n          resolve(new Sale(sale.saleID, item, sale.amount, buyer, sale.status === 'CONFIRMED'));\r\n        } catch (err) {\r\n          if (err.response.status === 404) {\r\n            console.log(err.response);\r\n            const item = new Item('', '', '');\r\n            resolve(new Sale(sale.saleID, item, sale.amount, buyer, sale.status === 'CONFIRMED'));\r\n          } else {\r\n            throw err;\r\n          }\r\n        }\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  static requestFetchAll(): Promise<Array<Sale>> {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const { data } = await Axios.get(config.restServer.url + '/Sale', {\r\n          withCredentials: true\r\n        });\r\n        const sales: Array<Sale> = await Promise.all(\r\n          data.map(\r\n            async (sale: {\r\n              item: string;\r\n              buyer: string;\r\n              saleID: string;\r\n              amount: number;\r\n              status: string;\r\n            }) => await this.mapToSale(sale)\r\n          )\r\n        );\r\n\r\n        resolve(sales.filter(sale => sale.item.id !== ''));\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport class RequestError {\r\n  static parseError(err: AxiosError): string {\r\n    if (err.response) {\r\n      let message: string = err.response.data.error.message;\r\n      if (message.indexOf('AccessException') !== -1) {\r\n        return 'Unallowed access';\r\n      }\r\n      message = message.split('\\n')[1] || message;\r\n      message = message.slice(message.lastIndexOf('Error'));\r\n      message = message.slice(message.lastIndexOf(':'));\r\n      message = _.trim(message);\r\n      return message;\r\n    } else {\r\n      return err.message;\r\n    }\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { SizeProp } from '@fortawesome/fontawesome-svg-core';\r\nimport './Loader-styles.css';\r\n\r\ninterface Props {\r\n  size?: SizeProp;\r\n}\r\n\r\nexport default class Loader extends React.Component<Props> {\r\n  render() {\r\n    const { size } = this.props;\r\n    return <FontAwesomeIcon {...this.props} size={size} icon=\"circle-notch\" className=\"loader\" />;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport Loader from 'components/Loader';\r\n\r\nexport default class FetchLoader extends React.Component {\r\n  render() {\r\n    return (\r\n      <span>\r\n        <Loader />\r\n        <span className=\"ml-2\">Fetching data...</span>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Modal, InputGroup, Button, FormControl, Form, Col, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Loader from 'components/Loader';\r\nimport { Item } from 'utils/types';\r\n\r\ninterface Props {\r\n  onHide: () => void;\r\n  shown: boolean;\r\n  item: Item;\r\n  amount: number;\r\n  processing: boolean;\r\n  handleDecrementAmount: () => void;\r\n  handleIncrementAmount: () => void;\r\n  handleChangeAmount: (evt: any) => void;\r\n  handleSubmit: () => void;\r\n}\r\n\r\nexport default class OrderModal extends React.Component<Props> {\r\n  render() {\r\n    const { onHide: close, shown, item, amount, processing } = this.props;\r\n    const {\r\n      handleIncrementAmount,\r\n      handleDecrementAmount,\r\n      handleChangeAmount,\r\n      handleSubmit\r\n    } = this.props;\r\n    return (\r\n      <Modal show={shown} onHide={close} backdrop={processing ? 'static' : true}>\r\n        <Modal.Header closeButton={processing}>\r\n          <Modal.Title>Order item</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <strong>You are ordering item: {item && item.name}</strong>\r\n          <Form.Group as={Row}>\r\n            <Col sm=\"6\">\r\n              <Form.Label>Amount to order: </Form.Label>\r\n            </Col>\r\n            <Col sm=\"4\" className=\"ml-auto\">\r\n              <InputGroup size=\"sm\">\r\n                <InputGroup.Prepend>\r\n                  <Button\r\n                    disabled={amount <= 0}\r\n                    variant=\"outline-secondary\"\r\n                    onClick={handleDecrementAmount}\r\n                  >\r\n                    <FontAwesomeIcon icon=\"minus\" />\r\n                  </Button>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  value={amount.toString()}\r\n                  onChange={handleChangeAmount}\r\n                  type=\"number\"\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button variant=\"outline-secondary\" onClick={handleIncrementAmount}>\r\n                    <FontAwesomeIcon icon=\"plus\" />\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Col>\r\n          </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" disabled={processing} onClick={close}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" disabled={processing || amount === 0} onClick={handleSubmit}>\r\n            {processing && <Loader />} Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Item, Sale, RequestError } from 'utils/types';\r\nimport { default as OrderModalView } from './OrderModal-view';\r\nimport toaster from 'toasted-notes';\r\n\r\ninterface State {\r\n  amount: number;\r\n  processing: boolean;\r\n}\r\n\r\ninterface Props {\r\n  item: Item;\r\n  shown: boolean;\r\n  onHide: () => void;\r\n  handleSuccess?: () => void;\r\n  handleError?: (err: any) => void;\r\n}\r\n\r\nexport default class OrderModal extends React.Component<Props, State> {\r\n  state: State;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      amount: 0,\r\n      processing: false\r\n    };\r\n  }\r\n\r\n  handleSubmit() {\r\n    const { item, onHide: close } = this.props;\r\n    const { handleSuccess, handleError } = this.props;\r\n    const { amount } = this.state;\r\n\r\n    this.setState({ processing: true });\r\n\r\n    Sale.requestCreate(item, amount)\r\n      .then(_ => {\r\n        toaster.notify('✔ Successfully placed order', {\r\n          position: 'bottom-right',\r\n          duration: 3000\r\n        });\r\n        if (handleSuccess) handleSuccess();\r\n      })\r\n      .catch(err => {\r\n        toaster.notify('❌ Failed to place order: ' + RequestError.parseError(err), {\r\n          position: 'bottom-right',\r\n          duration: 3000\r\n        });\r\n        if (handleError) handleError(err);\r\n      })\r\n      .finally(() => {\r\n        this.setState({ processing: false });\r\n        close();\r\n      });\r\n  }\r\n\r\n  handleChangeAmount(evt: any) {\r\n    let amount = Number.parseInt(evt.target.value);\r\n    amount = Math.max(0, amount);\r\n    this.setState({\r\n      amount: amount\r\n    });\r\n  }\r\n\r\n  handleIncrementAmount() {\r\n    this.setState({\r\n      amount: this.state.amount + 1\r\n    });\r\n  }\r\n\r\n  handleDecrementAmount() {\r\n    this.setState({\r\n      amount: Math.max(0, this.state.amount - 1)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { processing, amount } = this.state;\r\n    const { onHide, shown, item } = this.props;\r\n    return (\r\n      <OrderModalView\r\n        processing={processing}\r\n        onHide={onHide}\r\n        shown={shown}\r\n        item={item}\r\n        amount={amount}\r\n        handleChangeAmount={this.handleChangeAmount.bind(this)}\r\n        handleDecrementAmount={this.handleDecrementAmount.bind(this)}\r\n        handleIncrementAmount={this.handleIncrementAmount.bind(this)}\r\n        handleSubmit={this.handleSubmit.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\nimport Loader from 'components/Loader';\r\n\r\ninterface Props {\r\n  processing: boolean;\r\n  shown: boolean;\r\n  onHide: any;\r\n  name: string;\r\n  description: string;\r\n  handleChangeName: (evt: any) => void;\r\n  handleChangeDescription: (evt: any) => void;\r\n  handleSubmit: () => void;\r\n}\r\n\r\nexport default class AddModal extends React.Component<Props> {\r\n  render() {\r\n    const { shown, onHide: close, processing } = this.props;\r\n    const { name, description } = this.props;\r\n    const { handleChangeName, handleChangeDescription, handleSubmit } = this.props;\r\n    return (\r\n      <Modal show={shown} onHide={close}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add item</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form.Group>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control onChange={handleChangeName} placeholder=\"Enter name\" value={name} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Description (optional)</Form.Label>\r\n            <Form.Control\r\n              value={description}\r\n              onChange={handleChangeDescription}\r\n              placeholder=\"Enter description (optional)\"\r\n            />\r\n          </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" disabled={processing} onClick={close}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" disabled={processing || !name} onClick={handleSubmit}>\r\n            {processing && <Loader />} Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { default as AddModalView } from './AddModal-view';\r\nimport { Item, RequestError } from 'utils/types';\r\nimport toaster from 'toasted-notes';\r\n\r\ninterface State {\r\n  processing: boolean;\r\n  name: string;\r\n  description: string;\r\n}\r\n\r\ninterface Props {\r\n  shown: boolean;\r\n  onHide: () => void;\r\n  handleSuccess?: () => void;\r\n  handleError?: (err: any) => void;\r\n}\r\n\r\nexport default class AddModal extends React.Component<Props, State> {\r\n  state: State;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      processing: false,\r\n      name: '',\r\n      description: ''\r\n    };\r\n\r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n    this.handleChangeDescription = this.handleChangeDescription.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChangeName(evt: { target: { value: string } }) {\r\n    this.setState({\r\n      name: evt.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeDescription(evt: { target: { value: string } }) {\r\n    this.setState({\r\n      description: evt.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit() {\r\n    const { onHide: close } = this.props;\r\n    const { handleSuccess, handleError } = this.props;\r\n    this.setState({ processing: true });\r\n\r\n    Item.requestCreate(this.state.name, this.state.description)\r\n      .then(_ => {\r\n        toaster.notify('✔ Successfully created item', {\r\n          position: 'bottom-right',\r\n          duration: 3000\r\n        });\r\n        if (handleSuccess) handleSuccess();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        toaster.notify('❌ Failed to create item: ' + RequestError.parseError(err), {\r\n          position: 'bottom-right',\r\n          duration: 3000\r\n        });\r\n        if (handleError) handleError(err);\r\n      })\r\n      .finally(() => {\r\n        this.setState({ processing: false });\r\n        close();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { onHide, shown } = this.props;\r\n    const { name, description, processing } = this.state;\r\n    return (\r\n      <AddModalView\r\n        onHide={onHide}\r\n        shown={shown}\r\n        processing={processing}\r\n        name={name}\r\n        description={description}\r\n        handleChangeName={this.handleChangeName.bind(this)}\r\n        handleChangeDescription={this.handleChangeDescription.bind(this)}\r\n        handleSubmit={this.handleSubmit.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\nimport Loader from 'components/Loader';\r\n\r\ninterface Props {\r\n  name: string;\r\n  description: string;\r\n  processing: boolean;\r\n  shown: boolean;\r\n  onHide: () => void;\r\n  handleChangeDescription: (evt: any) => void;\r\n  handleSubmit: () => void;\r\n}\r\n\r\nexport default class EditModal extends React.Component<Props> {\r\n  render() {\r\n    const { shown, onHide: close, name, description, processing } = this.props;\r\n    const { handleChangeDescription, handleSubmit } = this.props;\r\n    return (\r\n      <Modal show={shown} onHide={close}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit item</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form.Group>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control value={name} disabled placeholder=\"Enter name\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Description (optional)</Form.Label>\r\n            <Form.Control\r\n              value={description}\r\n              onChange={handleChangeDescription}\r\n              placeholder=\"Enter description (optional)\"\r\n            />\r\n          </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" disabled={processing} onClick={close}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" disabled={processing || !name} onClick={handleSubmit}>\r\n            {processing && <Loader />} Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Item, RequestError } from 'utils/types';\r\nimport toaster from 'toasted-notes';\r\n\r\nimport { default as EditModalView } from './EditModal-view';\r\n\r\ninterface Props {\r\n  item: Item;\r\n  shown: boolean;\r\n  onHide: () => void;\r\n  handleSuccess?: () => void;\r\n  handleError?: (err: any) => void;\r\n}\r\n\r\ninterface State {\r\n  name: string;\r\n  description: string;\r\n  processing: boolean;\r\n}\r\n\r\nexport default class EditModal extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    const { item } = this.props;\r\n\r\n    this.state = {\r\n      processing: false,\r\n      name: item ? item.name : '',\r\n      description: item ? item.description : ''\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(props: Props) {\r\n    const { item } = props;\r\n    if (item && item.name === this.state.name) return;\r\n    this.setState({\r\n      name: item ? item.name : '',\r\n      description: item ? item.description : ''\r\n    });\r\n  }\r\n\r\n  handleChangeDescription(evt: any) {\r\n    this.setState({ description: evt.target.value });\r\n  }\r\n\r\n  handleSubmit() {\r\n    const { item, onHide: close } = this.props;\r\n    const { handleSuccess, handleError } = this.props;\r\n    this.setState({\r\n      processing: true\r\n    });\r\n\r\n    Item.requestEdit(item, this.state.description)\r\n      .then(_ => {\r\n        toaster.notify('✔ Successfully updated item', {\r\n          position: 'bottom-right',\r\n          duration: 3000\r\n        });\r\n        if (handleSuccess) handleSuccess();\r\n      })\r\n      .catch(err => {\r\n        toaster.notify(`❌ Failed to update item: ` + RequestError.parseError(err), {\r\n          position: 'bottom-right',\r\n          duration: 3000\r\n        });\r\n        if (handleError) handleError(err);\r\n      })\r\n      .finally(() => {\r\n        this.setState({\r\n          processing: false\r\n        });\r\n        close();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { shown, onHide } = this.props;\r\n    return (\r\n      <EditModalView\r\n        shown={shown}\r\n        name={this.state.name}\r\n        description={this.state.description}\r\n        processing={this.state.processing}\r\n        handleChangeDescription={this.handleChangeDescription.bind(this)}\r\n        handleSubmit={this.handleSubmit.bind(this)}\r\n        onHide={onHide}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nimport Loader from 'components/Loader';\r\nimport { Item } from 'utils/types';\r\n\r\ninterface Props {\r\n  item: Item;\r\n  shown: boolean;\r\n  processing: boolean;\r\n  handleSubmit: () => void;\r\n  onHide: () => void;\r\n}\r\n\r\nexport default class DeleteModal extends React.Component<Props> {\r\n  render() {\r\n    const { onHide: close, shown, item, processing } = this.props;\r\n    const { handleSubmit } = this.props;\r\n    return (\r\n      <Modal show={shown} onHide={close} backdrop={processing ? 'static' : true}>\r\n        <Modal.Header closeButton={!processing}>\r\n          <Modal.Title>Delete item</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <strong>You are about to delete item: {item && item.name}</strong>\r\n          <br />\r\n          <strong>Are you sure?</strong>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" disabled={processing} onClick={close}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\" disabled={processing} onClick={handleSubmit}>\r\n            {processing && <Loader />} Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Item, RequestError } from 'utils/types';\r\nimport toaster from 'toasted-notes';\r\n\r\nimport { default as DeleteModalView } from './DeleteModal-view';\r\n\r\ninterface State {\r\n  processing: boolean;\r\n}\r\n\r\ninterface Props {\r\n  item: Item;\r\n  shown: boolean;\r\n  onHide: () => void;\r\n  handleSuccess?: () => void;\r\n  handleError?: (err: any) => void;\r\n}\r\n\r\nexport default class DeleteModal extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      processing: false\r\n    };\r\n  }\r\n\r\n  handleSubmit() {\r\n    const { item, onHide: close } = this.props;\r\n    const { handleSuccess, handleError } = this.props;\r\n\r\n    this.setState({ processing: true });\r\n\r\n    Item.requestDelete(item)\r\n      .then(_ => {\r\n        toaster.notify('✔ Successfully deleted item', {\r\n          position: 'bottom-right',\r\n          duration: 3000\r\n        });\r\n        if (handleSuccess) handleSuccess();\r\n      })\r\n      .catch(err => {\r\n        toaster.notify('❌ Failed to delete item: ' + RequestError.parseError(err), {\r\n          position: 'bottom-right',\r\n          duration: 3000\r\n        });\r\n        if (handleError) handleError(err);\r\n      })\r\n      .finally(() => {\r\n        this.setState({ processing: false });\r\n        close();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { onHide, shown, item } = this.props;\r\n    const { processing } = this.state;\r\n    return (\r\n      <DeleteModalView\r\n        onHide={onHide}\r\n        item={item}\r\n        shown={shown}\r\n        processing={processing}\r\n        handleSubmit={this.handleSubmit.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Modal, InputGroup, Button, FormControl, Form, Col, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Loader from 'components/Loader';\r\nimport { Item } from 'utils/types';\r\n\r\ninterface Props {\r\n  item: Item;\r\n  amount: number;\r\n  shown: boolean;\r\n  processing: boolean;\r\n  onHide: () => void;\r\n  handleDecrementAmount: () => void;\r\n  handleIncrementAmount: () => void;\r\n  handleChangeAmount: (evt: any) => void;\r\n  handleSubmit: () => void;\r\n}\r\n\r\nexport default class RestockModal extends React.Component<Props> {\r\n  render() {\r\n    const { onHide: close, shown, item, amount, processing } = this.props;\r\n    const {\r\n      handleChangeAmount,\r\n      handleDecrementAmount,\r\n      handleIncrementAmount,\r\n      handleSubmit\r\n    } = this.props;\r\n    return (\r\n      <Modal show={shown} onHide={close} backdrop={processing ? 'static' : true}>\r\n        <Modal.Header closeButton={!processing}>\r\n          <Modal.Title>Restock item</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <strong>You are restocking item: {item && item.name}</strong>\r\n          <Form.Group as={Row}>\r\n            <Col sm=\"6\">\r\n              <Form.Label>Amount to restock: </Form.Label>\r\n            </Col>\r\n            <Col sm=\"4\" className=\"ml-auto\">\r\n              <InputGroup size=\"sm\">\r\n                <InputGroup.Prepend>\r\n                  <Button\r\n                    disabled={amount <= 0}\r\n                    variant=\"outline-secondary\"\r\n                    onClick={handleDecrementAmount}\r\n                  >\r\n                    <FontAwesomeIcon icon=\"minus\" />\r\n                  </Button>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  value={amount.toString()}\r\n                  onChange={handleChangeAmount}\r\n                  type=\"number\"\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button variant=\"outline-secondary\" onClick={handleIncrementAmount}>\r\n                    <FontAwesomeIcon icon=\"plus\" />\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Col>\r\n          </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" disabled={processing} onClick={close}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" disabled={processing || amount === 0} onClick={handleSubmit}>\r\n            {processing && <Loader />} Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Item, RequestError } from 'utils/types';\r\nimport toaster from 'toasted-notes';\r\n\r\nimport { default as RestockModalView } from './RestockModal-view';\r\n\r\ninterface State {\r\n  amount: number;\r\n  processing: boolean;\r\n}\r\n\r\ninterface Props {\r\n  item: Item;\r\n  shown: boolean;\r\n  onHide: () => void;\r\n  handleSuccess?: () => void;\r\n  handleError?: (err: any) => void;\r\n}\r\n\r\nexport default class RestockModal extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      amount: 0,\r\n      processing: false\r\n    };\r\n  }\r\n\r\n  handleSubmit() {\r\n    const { item, onHide: close } = this.props;\r\n    const { handleSuccess, handleError } = this.props;\r\n    const { amount } = this.state;\r\n\r\n    this.setState({ processing: true });\r\n\r\n    Item.requestRestock(item, amount)\r\n      .then(_ => {\r\n        toaster.notify('✔ Successfully restocked item', {\r\n          position: 'bottom-right',\r\n          duration: 3000\r\n        });\r\n        if (handleSuccess) handleSuccess();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        toaster.notify('❌ Failed to restock item: ' + RequestError.parseError(err), {\r\n          position: 'bottom-right',\r\n          duration: 3000\r\n        });\r\n        if (handleError) handleError(err);\r\n      })\r\n      .finally(() => {\r\n        this.setState({ processing: false });\r\n        close();\r\n      });\r\n  }\r\n\r\n  handleChangeAmount(evt: any) {\r\n    let amount = Number.parseInt(evt.target.value);\r\n    amount = Math.max(0, amount);\r\n    this.setState({\r\n      amount: amount\r\n    });\r\n  }\r\n\r\n  handleIncrementAmount() {\r\n    this.setState({\r\n      amount: this.state.amount + 1\r\n    });\r\n  }\r\n\r\n  handleDecrementAmount() {\r\n    this.setState({\r\n      amount: Math.max(0, this.state.amount - 1)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { item, shown, onHide } = this.props;\r\n    const { amount, processing } = this.state;\r\n    return (\r\n      <RestockModalView\r\n        item={item}\r\n        amount={amount}\r\n        shown={shown}\r\n        processing={processing}\r\n        onHide={onHide}\r\n        handleChangeAmount={this.handleChangeAmount.bind(this)}\r\n        handleDecrementAmount={this.handleDecrementAmount.bind(this)}\r\n        handleIncrementAmount={this.handleIncrementAmount.bind(this)}\r\n        handleSubmit={this.handleSubmit.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { Seller, Buyer, Item, Participant } from 'utils/types';\r\n\r\ninterface Props {\r\n  item: Item;\r\n  user: Participant;\r\n  checkInventory: (item: Item) => void;\r\n  editItem: (item: Item) => void;\r\n  orderItem: (item: Item) => void;\r\n  restockItem: (item: Item) => void;\r\n  deleteItem: (item: Item) => void;\r\n}\r\n\r\nexport default class ItemCard extends React.Component<Props> {\r\n  render() {\r\n    const { item, user } = this.props;\r\n    const { orderItem, editItem, deleteItem, restockItem, checkInventory } = this.props;\r\n    return (\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            {item.name}\r\n            {item.seller && user.type === Seller.TYPE && user.id === item.seller.id && (\r\n              <Button\r\n                variant=\"link\"\r\n                className=\"ml-1 text-secondary\"\r\n                onClick={() => checkInventory(item)}\r\n                size=\"sm\"\r\n              >\r\n                <small>Details</small>\r\n              </Button>\r\n            )}\r\n          </Card.Title>\r\n          <Card.Text>\r\n            {item.description}\r\n            <br />\r\n            <small>In stock: {item.amount}</small>\r\n            <br />\r\n            {!(item.seller && user.type === Seller.TYPE && user.id === item.seller.id) && (\r\n              <small className=\"text-muted\">Sold by {item.seller && item.seller.name}</small>\r\n            )}\r\n          </Card.Text>\r\n          {item.seller && user.type === Seller.TYPE && user.id === item.seller.id && (\r\n            <React.Fragment>\r\n              <Button variant=\"secondary\" onClick={() => restockItem(item)}>\r\n                Restock\r\n              </Button>\r\n              <Button variant=\"link\" className=\"text-secondary\" onClick={() => editItem(item)}>\r\n                Edit\r\n              </Button>\r\n              <Button variant=\"link\" className=\"text-secondary\" onClick={() => deleteItem(item)}>\r\n                Delete\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n          {user.type === Buyer.TYPE && <Button onClick={() => orderItem(item)}>Order</Button>}\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Inventory, Item } from 'utils/types';\r\nimport { Modal, Button, Table } from 'react-bootstrap';\r\nimport FetchLoader from 'components/FetchLoader';\r\n\r\ninterface Props {\r\n  processing: boolean;\r\n  item: Item;\r\n  inventory: Inventory;\r\n  shown: boolean;\r\n  onHide: () => void;\r\n}\r\n\r\nexport default class InventoryModal extends React.Component<Props> {\r\n  render() {\r\n    const { item, inventory, processing, shown, onHide: close } = this.props;\r\n    return (\r\n      <Modal show={shown} onHide={close}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Inventory data for {item.name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {processing ? (\r\n            <FetchLoader />\r\n          ) : (\r\n            <Table>\r\n              <tbody>\r\n                {inventory.changes.map((del, index) => (\r\n                  <tr key={index}>\r\n                    <td>{del.amount}</td>\r\n                    <td className={'text-' + (del.amount < 0 ? 'danger' : 'success')}>\r\n                      {del.type}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" onClick={close}>\r\n            OK\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Item, Inventory, RequestError } from 'utils/types';\r\nimport { default as InventoryModalView } from './InventoryModal-view';\r\nimport toaster from 'toasted-notes';\r\n\r\ninterface Props {\r\n  item: Item;\r\n  shown: boolean;\r\n  onHide: () => void;\r\n}\r\n\r\ninterface State {\r\n  inventory: Inventory;\r\n  processing: boolean;\r\n}\r\n\r\nexport default class InventoryModal extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      processing: true,\r\n      inventory: new Inventory('', '', [])\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(props: Props) {\r\n    const { shown, item } = props;\r\n    if (shown) {\r\n      this.requestInventory(item);\r\n    }\r\n  }\r\n\r\n  requestInventory(item: Item) {\r\n    this.setState({ processing: true });\r\n    Inventory.requestOfItem(item)\r\n      .then(inv => {\r\n        this.setState({ inventory: inv });\r\n      })\r\n      .catch(err => {\r\n        toaster.notify('❌ Unable to request inventory: ' + RequestError.parseError(err), {\r\n          position: 'bottom-right',\r\n          duration: 3000\r\n        });\r\n      })\r\n      .finally(() => {\r\n        this.setState({ processing: false });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { item, shown, onHide } = this.props;\r\n    const { inventory, processing } = this.state;\r\n    return (\r\n      <InventoryModalView\r\n        item={item}\r\n        inventory={inventory}\r\n        shown={shown}\r\n        processing={processing}\r\n        onHide={onHide}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Button, CardColumns } from 'react-bootstrap';\r\n\r\nimport FetchLoader from 'components/FetchLoader';\r\nimport OrderModal from 'components/OrderModal';\r\nimport AddModal from 'components/AddModal';\r\nimport EditModal from 'components/EditModal';\r\nimport DeleteModal from 'components/DeleteModal';\r\nimport RestockModal from 'components/RestockModal';\r\nimport ItemCard from './ItemCard';\r\nimport { Item, Seller, Buyer, Participant } from 'utils/types';\r\nimport InventoryModal from 'components/InventoryModal';\r\n\r\n// const testItems = [\r\n//     {\r\n//         id: \"I_1234-A\",\r\n//         name: \"Item A\",\r\n//         description: \"Item named A\",\r\n//         amount: 10,\r\n//     },\r\n//     {\r\n//         id: \"I_1234-B\",\r\n//         name: \"Item B\",\r\n//         description: \"Item named B\",\r\n//         amount: 3,\r\n//     },\r\n//     {\r\n//         id: \"I_1234-C\",\r\n//         name: \"Item C\",\r\n//         description: \"Item named C\",\r\n//         amount: 5,\r\n//     },\r\n// ];\r\n\r\ninterface Props {\r\n  items: Array<Item>;\r\n  loaded: boolean;\r\n  user: Participant;\r\n  refresh: () => void;\r\n}\r\n\r\ninterface State {\r\n  addModalOpen: boolean;\r\n  orderModalOpen: boolean;\r\n  editModalOpen: boolean;\r\n  deleteModalOpen: boolean;\r\n  restockModalOpen: boolean;\r\n  inventoryModalOpen: boolean;\r\n  itemForOrder: Item;\r\n  itemForEdit: Item;\r\n  itemForDelete: Item;\r\n  itemForRestock: Item;\r\n  itemForInventory: Item;\r\n}\r\n\r\nexport default class Items extends React.Component<Props, State> {\r\n  state: State;\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      addModalOpen: false,\r\n      orderModalOpen: false,\r\n      editModalOpen: false,\r\n      deleteModalOpen: false,\r\n      restockModalOpen: false,\r\n      inventoryModalOpen: false,\r\n      itemForOrder: new Item('', '', ''),\r\n      itemForEdit: new Item('', '', ''),\r\n      itemForDelete: new Item('', '', ''),\r\n      itemForRestock: new Item('', '', ''),\r\n      itemForInventory: new Item('', '', '')\r\n    };\r\n\r\n    this.openAddModal = this.openAddModal.bind(this);\r\n    this.openOrderModal = this.openOrderModal.bind(this);\r\n    this.openEditModal = this.openEditModal.bind(this);\r\n    this.openDeleteModal = this.openDeleteModal.bind(this);\r\n    this.openRestockModal = this.openRestockModal.bind(this);\r\n    this.openInventoryModal = this.openInventoryModal.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n\r\n  openAddModal() {\r\n    this.setState({\r\n      addModalOpen: true\r\n    });\r\n  }\r\n\r\n  openOrderModal(item: Item) {\r\n    this.setState({\r\n      orderModalOpen: true,\r\n      itemForOrder: item\r\n    });\r\n  }\r\n\r\n  openEditModal(item: Item) {\r\n    this.setState({\r\n      editModalOpen: true,\r\n      itemForEdit: item\r\n    });\r\n  }\r\n\r\n  openDeleteModal(item: Item) {\r\n    this.setState({\r\n      deleteModalOpen: true,\r\n      itemForDelete: item\r\n    });\r\n  }\r\n\r\n  openRestockModal(item: Item) {\r\n    this.setState({\r\n      restockModalOpen: true,\r\n      itemForRestock: item\r\n    });\r\n  }\r\n\r\n  openInventoryModal(item: Item) {\r\n    this.setState({\r\n      inventoryModalOpen: true,\r\n      itemForInventory: item\r\n    });\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({\r\n      addModalOpen: false,\r\n      orderModalOpen: false,\r\n      editModalOpen: false,\r\n      deleteModalOpen: false,\r\n      restockModalOpen: false,\r\n      inventoryModalOpen: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { loaded, items, user, refresh } = this.props;\r\n    return (\r\n      <div>\r\n        <h2>\r\n          Items{' '}\r\n          {user && user.type === Seller.TYPE && (\r\n            <Button variant=\"outline-dark\" className=\"ml-2\" size=\"sm\" onClick={this.openAddModal}>\r\n              Add\r\n            </Button>\r\n          )}\r\n        </h2>\r\n        {!loaded ? (\r\n          <FetchLoader />\r\n        ) : (\r\n          <CardColumns className=\"mt-4\">\r\n            {items.length === 0 ? (\r\n              <p>No items available</p>\r\n            ) : (\r\n              items.map((item: Item, index: string | number | undefined) => (\r\n                <ItemCard\r\n                  key={index}\r\n                  item={item}\r\n                  user={user}\r\n                  orderItem={this.openOrderModal}\r\n                  editItem={this.openEditModal}\r\n                  deleteItem={this.openDeleteModal}\r\n                  restockItem={this.openRestockModal}\r\n                  checkInventory={this.openInventoryModal}\r\n                />\r\n              ))\r\n            )}\r\n          </CardColumns>\r\n        )}\r\n        {user && user.type === Seller.TYPE && (\r\n          <>\r\n            <RestockModal\r\n              onHide={this.closeModal}\r\n              shown={this.state.restockModalOpen}\r\n              item={this.state.itemForRestock}\r\n              handleSuccess={refresh}\r\n            />\r\n            <AddModal\r\n              onHide={this.closeModal}\r\n              shown={this.state.addModalOpen}\r\n              handleSuccess={refresh}\r\n            />\r\n            <EditModal\r\n              onHide={this.closeModal}\r\n              shown={this.state.editModalOpen}\r\n              item={this.state.itemForEdit}\r\n              handleSuccess={refresh}\r\n            />\r\n            <DeleteModal\r\n              onHide={this.closeModal}\r\n              shown={this.state.deleteModalOpen}\r\n              item={this.state.itemForDelete}\r\n              handleSuccess={refresh}\r\n            />\r\n            <InventoryModal\r\n              onHide={this.closeModal}\r\n              shown={this.state.inventoryModalOpen}\r\n              item={this.state.itemForInventory}\r\n            />\r\n          </>\r\n        )}\r\n        {user && user.type === Buyer.TYPE && (\r\n          <OrderModal\r\n            onHide={this.closeModal}\r\n            shown={this.state.orderModalOpen}\r\n            item={this.state.itemForOrder}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Item, RequestError, Participant } from 'utils/types';\r\nimport toaster from 'toasted-notes';\r\n\r\nimport { default as ItemListView } from './ItemList-view';\r\nimport Config from 'utils/config';\r\n\r\ninterface State {\r\n  items: Array<Item>;\r\n  loaded: boolean;\r\n}\r\n\r\ninterface Props {\r\n  user: Participant;\r\n}\r\n\r\nconst config = new Config();\r\nconst wss = new WebSocket(config.restServer.wsURL);\r\n\r\nexport default class ItemList extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      loaded: false\r\n    };\r\n\r\n    this.requestItems.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.requestItems();\r\n    wss.onmessage = evt => {\r\n      const { $class } = JSON.parse(evt.data);\r\n      switch($class) {\r\n        case \"com.stockchainz.net.StockChanged\":\r\n        case \"com.stockchainz.net.ItemModified\":\r\n        case \"com.stockchainz.net.ItemCreated\":\r\n        case \"com.stockchainz.net.ItemDeleted\":\r\n          this.requestItems();\r\n      }\r\n    };\r\n  }\r\n\r\n  requestItems() {\r\n    this.setState({ loaded: false });\r\n\r\n    Item.requestFetchAll()\r\n      .then(items => {\r\n        this.setState({ items });\r\n      })\r\n      .catch(err => {\r\n        toaster.notify('❌ Cannot load items: ' + RequestError.parseError(err), {\r\n          position: 'bottom-right',\r\n          duration: 3000\r\n        });\r\n      })\r\n      .finally(() => {\r\n        this.setState({ loaded: true });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { items, loaded } = this.state;\r\n    const { user } = this.props;\r\n    return (\r\n      <ItemListView\r\n        items={items}\r\n        loaded={loaded}\r\n        user={user}\r\n        refresh={this.requestItems.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Loader from 'components/Loader';\r\nimport { Sale } from 'utils/types';\r\n\r\ninterface Props {\r\n  sale: Sale;\r\n  processing: boolean;\r\n  confirmSale: (sale: Sale) => void;\r\n}\r\n\r\nexport default class ConfirmSaleButton extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      processing: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { sale, processing, confirmSale } = this.props;\r\n    return (\r\n      <Button size=\"sm\" onClick={() => confirmSale(sale)} disabled={processing}>\r\n        {processing ? <Loader /> : <FontAwesomeIcon icon=\"check\" />}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Sale, RequestError } from 'utils/types';\r\nimport { default as ConfirmSaleButtonView } from './ConfirmSaleButton-view';\r\nimport toaster from 'toasted-notes';\r\n\r\ninterface State {\r\n  processing: boolean;\r\n}\r\n\r\ninterface Props {\r\n  sale: Sale;\r\n  handleSuccess?: () => void;\r\n  handleError?: () => void;\r\n}\r\n\r\nexport default class ConfirmSaleButton extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      processing: false\r\n    };\r\n  }\r\n\r\n  confirmSale(sale: Sale) {\r\n    console.log(sale);\r\n\r\n    const { handleSuccess, handleError } = this.props;\r\n\r\n    this.setState({ processing: true });\r\n\r\n    Sale.requestConfirm(sale)\r\n      .then(_ => {\r\n        toaster.notify(`✔ Successfully confirmed sale #${sale.id}`, {\r\n          position: 'bottom-right',\r\n          duration: 3000\r\n        });\r\n        if (handleSuccess) handleSuccess();\r\n      })\r\n      .catch(err => {\r\n        toaster.notify(`❌ Failed to confirm sale: ` + RequestError.parseError(err), {\r\n          position: 'bottom-right',\r\n          duration: 3000\r\n        });\r\n        if (handleError) handleError();\r\n      })\r\n      .finally(() => {\r\n        this.setState({ processing: false });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { processing } = this.state;\r\n    const { sale } = this.props;\r\n\r\n    return (\r\n      <ConfirmSaleButtonView\r\n        processing={processing}\r\n        sale={sale}\r\n        confirmSale={this.confirmSale.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Card, Table } from 'react-bootstrap';\r\nimport { Seller, Sale } from 'utils/types';\r\nimport ConfirmSaleButton from '../ConfirmSaleButton';\r\nimport * as _ from 'underscore.string';\r\n\r\ninterface Props {\r\n  role: string;\r\n  sales: Array<Sale>;\r\n  refresh: () => void;\r\n}\r\n\r\nexport default class UnconfirmedSaleCard extends React.Component<Props> {\r\n  render() {\r\n    const { role, sales, refresh } = this.props;\r\n    return (\r\n      <Card border=\"secondary\" className=\"mb-3\">\r\n        <Card.Header as=\"h5\">Unconfirmed</Card.Header>\r\n        <Card.Body>\r\n          {sales.length === 0 ? (\r\n            <p>No unconfirmed {role === Seller.TYPE ? 'sales' : 'orders'} </p>\r\n          ) : (\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Item</th>\r\n                  <th>Amount</th>\r\n                  {role === Seller.TYPE && <th />}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {sales.map((sale, index) => (\r\n                  <tr key={index}>\r\n                    <td>{_.truncate(sale.id, 5)}</td>\r\n                    <td>{sale.item.name}</td>\r\n                    <td>{sale.amount}</td>\r\n                    {role === Seller.TYPE && (\r\n                      <td>\r\n                        <ConfirmSaleButton sale={sale} handleSuccess={refresh} />\r\n                      </td>\r\n                    )}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Card, Table } from 'react-bootstrap';\r\nimport { Sale, Seller } from 'utils/types';\r\nimport * as _ from 'underscore.string';\r\n\r\ninterface Props {\r\n  sales: Array<Sale>;\r\n  role: string;\r\n}\r\n\r\nexport default class ConfirmedSaleCard extends React.Component<Props> {\r\n  render() {\r\n    const { role, sales } = this.props;\r\n    return (\r\n      <Card border=\"success\">\r\n        <Card.Header as=\"h5\">Confirmed</Card.Header>\r\n        <Card.Body>\r\n          {sales.length === 0 ? (\r\n            <p>No unconfirmed {role === Seller.TYPE ? 'sales' : 'orders'} </p>\r\n          ) : (\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Item</th>\r\n                  <th>Amount</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {sales.map((sale, index) => (\r\n                  <tr key={index}>\r\n                    <td>{_.truncate(sale.id, 5)}</td>\r\n                    <td>{sale.item.name}</td>\r\n                    <td>{sale.amount}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nimport { Sale, Seller } from 'utils/types';\r\nimport UnconfirmedSaleCard from './UnconfirmedSaleCard';\r\nimport ConfirmedSaleCard from './ConfirmedSaleCard';\r\nimport FetchLoader from 'components/FetchLoader';\r\n\r\ninterface Props {\r\n  sales: Array<Sale>;\r\n  loaded: boolean;\r\n  role: string;\r\n  refresh: () => void;\r\n}\r\n\r\nexport default class SaleList extends React.Component<Props> {\r\n  render() {\r\n    const { sales, role, loaded, refresh } = this.props;\r\n    return (\r\n      <div>\r\n        <h2>{role === Seller.TYPE ? 'Sales' : 'Orders'}</h2>\r\n        {!loaded ? (\r\n          <FetchLoader />\r\n        ) : (\r\n          <Row className=\"mt-4\">\r\n            <Col>\r\n              <UnconfirmedSaleCard sales={sales.filter(sale => !sale.confirmed)} role={role} refresh={refresh} />\r\n            </Col>\r\n            <Col>\r\n              <ConfirmedSaleCard sales={sales.filter(sale => sale.confirmed)} role={role} />\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Sale, RequestError } from 'utils/types';\r\nimport toaster from 'toasted-notes';\r\n\r\nimport { default as SaleListView } from './SaleList-view';\r\nimport Config from 'utils/config';\r\n\r\ninterface Props {\r\n  role: string;\r\n}\r\n\r\ninterface State {\r\n  sales: Array<Sale>;\r\n  loaded: boolean;\r\n}\r\n\r\nconst config = new Config();\r\nconst wss = new WebSocket(config.restServer.wsURL);\r\n\r\nexport default class SaleList extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      sales: [],\r\n      loaded: false\r\n    };\r\n\r\n    this.requestSales.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.requestSales();\r\n    wss.onmessage = evt => {\r\n      const { $class } = JSON.parse(evt.data);\r\n      switch($class) {\r\n        case \"com.stockchainz.net.OrderPlaced\":\r\n        case \"com.stockchainz.net.SaleConfirmed\":\r\n        case \"com.stockchainz.net.ItemDeleted\":\r\n          this.requestSales();\r\n      }\r\n    };\r\n  }\r\n\r\n  requestSales() {\r\n    this.setState({ loaded: false });\r\n\r\n    Sale.requestFetchAll()\r\n      .then(sales => {\r\n        this.setState({ sales });\r\n      })\r\n      .catch(err => {\r\n        toaster.notify('❌ Cannot load sales: ' + RequestError.parseError(err), {\r\n          position: 'bottom-right',\r\n          duration: 3000\r\n        });\r\n      })\r\n      .finally(() => {\r\n        this.setState({ loaded: true });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { role } = this.props;\r\n    const { sales, loaded } = this.state;\r\n    return (\r\n      <SaleListView\r\n        role={role}\r\n        sales={sales}\r\n        loaded={loaded}\r\n        refresh={this.requestSales.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nimport Header from 'components/Header';\r\nimport ItemList from 'components/ItemList';\r\nimport { Participant } from 'utils/types';\r\nimport SaleList from 'components/SaleList';\r\n\r\ninterface Props {\r\n  user: Participant;\r\n  handleSignout: () => void;\r\n}\r\n\r\nexport default class Dashboard extends React.Component<Props> {\r\n  render() {\r\n    const { user, handleSignout } = this.props;\r\n    return (\r\n      <>\r\n        <Header username={user.name} handleSignout={handleSignout} />\r\n        <Container style={{ marginTop: 56 }} className=\"pt-4\">\r\n          <ItemList user={user} />\r\n          <hr />\r\n          <SaleList role={user.type} />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { default as DashboardView } from './Dashboard-view';\r\nimport { Redirect } from 'react-router';\r\nimport { Session } from 'utils/types';\r\n\r\ninterface Props {\r\n  session: Session;\r\n  handleSignout: () => void;\r\n}\r\n\r\ninterface State {}\r\n\r\nexport default class Dashboard extends React.Component<Props, State> {\r\n  render() {\r\n    const { session } = this.props;\r\n    const { handleSignout } = this.props;\r\n    if (!session.loggedIn) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n    if (!session.user) {\r\n      return <Redirect to=\"/register\" />;\r\n    }\r\n    return <DashboardView user={session.user} handleSignout={handleSignout} />;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Config from 'utils/config';\r\n\r\nconst config = new Config();\r\n\r\nexport default class Signin extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container\r\n        className=\"d-flex flex-column justify-content-center align-items-center\"\r\n        style={{ height: '100vh' }}\r\n      >\r\n        <h1 className=\"text-monospace\">Sign in to access the site</h1>\r\n        <Button\r\n          href={config.restServer.authURL + '/google'}\r\n          variant=\"outline-light\"\r\n          className=\"border-danger text-danger font-weight-normal mt-2 px-3\"\r\n        >\r\n          <FontAwesomeIcon icon={['fab', 'google']} className=\"mr-2\" />\r\n          <span>Sign in with Google</span>\r\n        </Button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { default as SigninView } from './Signin-view';\r\nimport { Redirect } from 'react-router';\r\nimport { Session } from 'utils/types';\r\n\r\ninterface State {}\r\n\r\ninterface Props {\r\n  session: Session;\r\n}\r\n\r\nexport default class Signin extends React.Component<Props, State> {\r\n  render() {\r\n    const { session } = this.props;\r\n    if (session.loggedIn) {\r\n      return <Redirect to={session.user ? '/' : '/register'} />;\r\n    }\r\n    return <SigninView />;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport Loader from 'components/Loader';\r\n\r\nexport default class ProcessingLoader extends React.Component {\r\n  render() {\r\n    return (\r\n      <span>\r\n        <Loader />\r\n        <span className=\"ml-2\">Processing</span>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Container, Form, Card, ToggleButtonGroup, ToggleButton, Button } from 'react-bootstrap';\r\nimport { Seller, Buyer } from 'utils/types';\r\nimport ProcessingLoader from 'components/ProcessingLoader';\r\n\r\ninterface Props {\r\n  processing: boolean;\r\n  name: string;\r\n  role: string;\r\n  handleChangeName: any;\r\n  handleChangeRole: any;\r\n  handleSubmit: () => void;\r\n}\r\n\r\nexport default class Register extends React.Component<Props> {\r\n  render() {\r\n    const { name, role, processing } = this.props;\r\n    const { handleChangeName, handleChangeRole, handleSubmit } = this.props;\r\n    return (\r\n      <Container\r\n        className=\"d-flex flex-column justify-content-center align-items-center\"\r\n        style={{ height: '100vh' }}\r\n      >\r\n        <Card style={{ maxWidth: '18rem' }}>\r\n          <Card.Body>\r\n            <h3 className=\"mb-4\">Register as a participant</h3>\r\n            <Form>\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your name\"\r\n                  value={name}\r\n                  onChange={handleChangeName}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"role\">\r\n                <Form.Label className=\"d-block\">Role</Form.Label>\r\n                <ToggleButtonGroup\r\n                  name=\"role\"\r\n                  type=\"radio\"\r\n                  value={role}\r\n                  onChange={handleChangeRole}\r\n                >\r\n                  <ToggleButton variant=\"light\" value={Seller.TYPE} style={{ cursor: 'pointer' }}>\r\n                    Seller\r\n                  </ToggleButton>\r\n                  <ToggleButton variant=\"light\" value={Buyer.TYPE} style={{ cursor: 'pointer' }}>\r\n                    Buyer\r\n                  </ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Form.Group>\r\n              <Button className=\"mt-2\" variant=\"primary\" onClick={handleSubmit} disabled={processing}>\r\n                {processing ? <ProcessingLoader /> : 'Register'}\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { withRouter, RouteComponentProps, Redirect } from 'react-router';\r\nimport toaster from 'toasted-notes';\r\n\r\nimport { default as RegisterView } from './Register-view';\r\nimport { Seller, Session, RequestError } from 'utils/types';\r\n\r\ninterface State {\r\n  name: string;\r\n  role: string;\r\n  processing: boolean;\r\n}\r\n\r\ninterface Props {\r\n  session: Session;\r\n  handleRegister: (\r\n    name: string,\r\n    role: string,\r\n    successHandler?: () => void,\r\n    errorHandler?: (err: any) => void\r\n  ) => void;\r\n}\r\n\r\ntype PropTypes = Props & RouteComponentProps;\r\n\r\nclass Register extends React.Component<PropTypes, State> {\r\n  constructor(props: PropTypes) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      role: Seller.TYPE,\r\n      processing: false\r\n    };\r\n  }\r\n\r\n  handleChangeName(event: React.FormEvent<HTMLInputElement>) {\r\n    this.setState({ name: event.currentTarget.value });\r\n  }\r\n\r\n  handleChangeRole(value: string, _: any) {\r\n    this.setState({ role: value });\r\n  }\r\n\r\n  handleSubmit() {\r\n    const { name, role } = this.state;\r\n    const { handleRegister } = this.props;\r\n    this.setState({ processing: true });\r\n\r\n    const successHandler = () => {\r\n      this.props.history.push('/');\r\n    };\r\n\r\n    const errorHandler = (err: any) => {\r\n      toaster.notify('❌ Unable to register: ' + RequestError.parseError(err), {\r\n        position: 'bottom-right',\r\n        duration: 3000\r\n      });\r\n      this.setState({ processing: false });\r\n    };\r\n\r\n    handleRegister(name, role, successHandler, errorHandler);\r\n  }\r\n\r\n  render() {\r\n    const { session } = this.props;\r\n    // If not logged in, sign in first\r\n    if (!session.loggedIn) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n    // If already logged in and user is set, redirect to dashboard\r\n    if (session.user) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    const { name, role, processing } = this.state;\r\n    return (\r\n      <RegisterView\r\n        name={name}\r\n        role={role}\r\n        processing={processing}\r\n        handleChangeName={this.handleChangeName.bind(this)}\r\n        handleChangeRole={this.handleChangeRole.bind(this)}\r\n        handleSubmit={this.handleSubmit.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Register);\r\n","import * as React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport Loader from 'components/Loader';\r\n\r\nexport default class AppLoader extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container\r\n        className=\"d-flex flex-column justify-content-center align-items-center\"\r\n        style={{ height: '100vh' }}\r\n      >\r\n        <Loader size=\"5x\"/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport default class Disconnected extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container\r\n        className=\"d-flex flex-column justify-content-center align-items-center\"\r\n        style={{ height: '100vh' }}\r\n      >\r\n        <h1><span role=\"img\" aria-label=\"error\">❌</span> Cannot connect to server. Please try again later</h1>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class NotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container\r\n        className=\"d-flex flex-column justify-content-center align-items-center\"\r\n        style={{ height: '100vh' }}\r\n      >\r\n        <h1> Oh no! Where am I?</h1>\r\n        <p>\r\n          Go back <Link to=\"/\">home</Link>\r\n        </p>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Dashboard from 'components/Dashboard';\nimport Signin from 'components/Signin';\nimport Register from 'components/Register';\n\nimport 'toasted-notes/src/styles.css';\nimport './App.css';\nimport toaster from 'toasted-notes';\nimport { Participant, Session, RequestError } from 'utils/types';\nimport AppLoader from 'components/AppLoader';\nimport Disconnected from 'components/Disconnected';\nimport NotFound from 'components/NotFound';\n\ninterface Props {}\n\nexport interface AppState {\n  session?: Session;\n  disconnected: boolean;\n}\n\nexport default class App extends React.Component<Props, AppState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      disconnected: false\n    };\n\n    this.handleSignin = this.handleSignin.bind(this);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.handleSignout = this.handleSignout.bind(this);\n  }\n\n  async componentWillMount() {\n    try {\n      const session = await Participant.requestSession();\n      this.handleSignin(session);\n    } catch (err) {\n      this.setState({ disconnected: true });\n      console.log(err);\n    }\n  }\n\n  handleSignin(session: Session) {\n    this.setState({ session });\n  }\n\n  handleRegister(\n    name: string,\n    role: string,\n    successCallback?: () => void,\n    errorCallback?: (err: any) => void\n  ) {\n    Participant.requestRegister(name, role)\n      .then(user => {\n        this.handleSignin({ loggedIn: true, user });\n        if (successCallback) successCallback();\n      })\n      .catch(err => {\n        toaster.notify('❌ Unable to register: ' + RequestError.parseError(err), {\n          position: 'bottom-right',\n          duration: 3000\n        });\n        if (errorCallback) errorCallback(err);\n      });\n  }\n\n  handleSignout() {\n    Participant.requestSignout()\n      .then(_ => {\n        window.location.reload();\n      })\n      .catch(err => {\n        toaster.notify('❌ Error in signing out: ' + RequestError.parseError(err), {\n          position: 'bottom-right',\n          duration: 3000\n        });\n      });\n  }\n\n  render() {\n    const { session, disconnected } = this.state;\n    if (disconnected) {\n      return <Disconnected />;\n    }\n    if (!session) {\n      return <AppLoader />;\n    }\n    return (\n      <Switch>\n        <Route\n          path=\"/signin\"\n          exact={true}\n          render={props => <Signin {...props} session={session} />}\n        />\n        <Route\n          path=\"/register\"\n          exact={true}\n          render={props => (\n            <Register {...props} session={session} handleRegister={this.handleRegister} />\n          )}\n        />\n        <Route\n          path=\"/\"\n          exact={true}\n          render={props => (\n            <Dashboard {...props} session={session} handleSignout={this.handleSignout} />\n          )}\n        />\n        <Route exact={false} render={props => <NotFound {...props} />} />\n      </Switch>\n    );\n  }\n}\n","import * as React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nexport default class Root extends React.Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\n\nimport * as serviceWorker from './serviceWorker';\nimport Root from './containers/Root';\n\nlibrary.add(fas, far, fab);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}